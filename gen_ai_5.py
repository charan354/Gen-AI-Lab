# -*- coding: utf-8 -*-
"""Gen Ai 5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hB_FCx3QkAphvaOcLH8NOVQ9O-n1ycgV
"""

# Install dependencies
!pip install diffusers accelerate transformers safetensors torch torchvision --upgrade

# 1) Import libraries
import torch
from diffusers import PixArtAlphaPipeline

# 2) Load a Transformer-based T2I model (PixArt-a / DiT)
model_id = "PixArt-alpha/PixArt-XL-2-512x512"
dtype = torch.float16 if torch.cuda.is_available() else torch.float32

pipe = PixArtAlphaPipeline.from_pretrained(
    model_id,
    torch_dtype=dtype,
)

device = "cuda" if torch.cuda.is_available() else "cpu"
pipe = pipe.to(device)

# Optional: enable memory optimizations
if device == "cuda":
    pipe.enable_vae_slicing()
    # Uncomment if you have xformers installed for speedup
    # pipe.enable_xformers_memory_efficient_attention()
# Removed the following line as it causes an error on CPU without proper accelerator setup:
# else:
#     pipe.enable_model_cpu_offload()

# 3) Write a good prompt for a face
prompt = (
    "Ultra-realistic close-up portrait of a young adult human, neutral expression, "
    "natural soft lighting, 85mm lens bokeh, high detail skin, photographic quality"
)
negative_prompt = (
    "blurry, low quality, extra fingers, extra eyes, deformed, text, watermark, logo"
)

# 4) Generate the image
generator = torch.Generator(device=device).manual_seed(42)  # reproducibility
image = pipe(
    prompt=prompt,
    negative_prompt=negative_prompt,
    num_inference_steps=24,  # increase for slightly higher quality
    guidance_scale=4.5,      # 3.5-6 is typical
    height=512,
    width=512,
    generator=generator
).images[0]

# 5) Save the result
image.save("face.png")
print("Saved to face.png")



from IPython.display import Image, display

try:
    display(Image("face.png"))
except FileNotFoundError:
    print("The image 'face.png' was not found. Please ensure the previous cell ran successfully.")